name: Security

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scan daily at 6 AM UTC
    - cron: '0 6 * * *'

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23
        
    - name: Run Gosec Security Scanner
      uses: securego/gosec@master
      with:
        args: '-fmt sarif -out gosec.sarif -fmt json -out gosec-report.json ./...'
        
    - name: Upload Gosec JSON report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: gosec-security-report
        path: gosec-report.json
        
    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: gosec.sarif

  vulnerability-dependency-scan:
    name: Vulnerability & Dependency Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.23
        
    - name: Run govulncheck with JSON output
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck -json ./... > vulnerability-report.json || true
        
    - name: Display vulnerability summary
      run: |
        if [ -f vulnerability-report.json ]; then
          echo "üìã Vulnerability scan completed - check artifacts for detailed report"
          # Show basic summary without failing on vulnerabilities
          govulncheck ./... || echo "‚ö†Ô∏è Vulnerabilities found - see detailed report"
        fi
        
    - name: Upload vulnerability report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: vulnerability-report
        path: vulnerability-report.json
      
  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    
    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]
        
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        
    - name: Auto build
      uses: github/codeql-action/autobuild@v3
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3